classdef Brain3DStructureVisualizer
    % Brain3DStructureVisualizer
    % Static methods for visualizing 3D brain structures and spatial data.

    methods (Static)

        function [hAx] = imageBrainRegionalValuesIn3D(regionalValueVector,brainSpace3D,brainRegionInfo,options)
            arguments
                regionalValueVector (:,1) {mustBeNumeric}
                brainSpace3D BrainSpace3D
                brainRegionInfo BrainRegionInformation
                options.Clim (1,2) {mustBeNumeric} = [min(regionalValueVector),max(regionalValueVector)];
                options.ViewAzEl (1,2) {mustBeNumeric} = [70,20];
                options.PlotSize (1,1) {mustBeNumeric} = 8;
                options.ColorList = redblue_cp;
                options.CBarPos = "none";
                options.ParentAxes = []; % must be 'matlab.graphics.axis.Axes' or empty
            end
            % Get axes
            hAx = getOrCreateAxes(options.ParentAxes);
            % setParameters
            climVec = options.Clim;
            erodeSize = 1;
            pltsz = options.PlotSize;
            [LRSize,APSize,DVSize] = getVoxelSize(brainSpace3D);
            NRegion = height(brainRegionInfo.RegionTable);
            % Color index assignment
            colorIndexes = makeColorIndex256Split_anyClim(regionalValueVector, climVec);
            % make surface patches
            for nr = 1:NRegion
                erodeIm = imerode(brainSpace3D.RegionIndex3D == brainRegionInfo.RegionTable.AnnotationIndex(nr), ones(erodeSize, erodeSize, erodeSize));
                erodeIm = permute(erodeIm, [2,1,3]); % for isosurface()
                colorListIndex = colorIndexes(nr);
                regionSurf = isosurface(1:LRSize, 1:APSize, 1:DVSize, erodeIm, 0);
                patch(regionSurf, 'FaceColor', options.ColorList(colorListIndex,:), 'FaceAlpha', .25, 'EdgeColor', 'none');
                hold on
            end
            % memo : functionize
            % plot region centers if available
            if ~isempty(brainSpace3D.RegionCenterCoord)
                [CLRs,CAPs,CDVs] = getCenterCoordinates(brainSpace3D);
                scatter3(CLRs, CAPs, CDVs, pltsz, 'k', 'o', 'filled');
            end
            view(options.ViewAzEl)
            axis equal
            % set axsis
            xlim([0,LRSize])
            ylim([0,APSize])
            zlim([0,DVSize])
            hiatus = 1;
            xticks([0+hiatus,LRSize-hiatus])
            xticklabels({'R','L'})
            yticks([0+hiatus,APSize-hiatus])
            yticklabels({'A','P'})
            zticks([0+hiatus,DVSize-hiatus])
            zticklabels({'I','S'})
            colormap(options.ColorList);
            colorbar
            clim(climVec)
            colorbar off
            switch options.CBarPos
                case "none"
                    colorbar off
                case "bottom"
                    colorbar('Location', 'southoutside')
                case "right"
                    colorbar('Location', 'east')
            end
        end

        function [hAx] = image3DBrainMajorRegion(brainSpace3D,brainRegionInfo,options)
            arguments
                brainSpace3D BrainSpace3D
                brainRegionInfo BrainRegionInformation
                options.ViewAzEl (1,2) {mustBeNumeric} = [70,20];
                options.PlotSize (1,1) {mustBeNumeric} = 8;
                options.ColorList = redblue_cp;
                options.CBarPos = "none";
                options.ParentAxes = []; % must be 'matlab.graphics.axis.Axes' or empty
            end        
            hAx = getOrCreateAxes(options.ParentAxes); % Get axes
            load('colorList13.mat'); % load color list
            % setParameters
            erodeSize = 1;
            pltsz = options.PlotSize;
            [LRSize,APSize,DVSize] = getVoxelSize(brainSpace3D);
            NRegion = height(brainRegionInfo.RegionTable);
            [~,~,MRIndexList] = brainRegionInfo.getMajorRegionInfo;
            % make surface patches
            for nr = 1:NRegion
                regionAnnotationIndex = brainRegionInfo.RegionTable.AnnotationIndex(nr);
                erodeIm = imerode(brainSpace3D.RegionIndex3D == regionAnnotationIndex, ones(erodeSize, erodeSize, erodeSize));
                erodeIm = permute(erodeIm, [2,1,3]); % for isosurface()
                MRIndex = MRIndexList(regionAnnotationIndex);
                regionSurf = isosurface(1:LRSize, 1:APSize, 1:DVSize, erodeIm, 0);
                patch(regionSurf, 'FaceColor', colorList13(MRIndex,:), 'FaceAlpha', .25, 'EdgeColor', 'none');
                hold on
            end
            % plot region centers if available
            if ~isempty(brainSpace3D.RegionCenterCoord)
                [CLRs,CAPs,CDVs] = getCenterCoordinates(brainSpace3D);
                scatter3(CLRs, CAPs, CDVs, pltsz, 'k', 'o', 'filled');
            end

        end



    end
end
