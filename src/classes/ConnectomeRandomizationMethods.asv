classdef ConnectomeRandomizationMethods
    % Collection of randomization strategies for connectome matrices
    methods (Static)

        function [randomizedMat,randDomDefMat] = randomGeneration(conMat, domDefMat, ~)
            arguments
               conMat (:,:) logical
               domDefMat (:,:) logical;
               ~
            end
            conMat = conMat .* domDefMat;
            numCon = sum(conMat,"all");
            if isempty(numCon)
                randomizedMat = zeros(size(conMat));
                return;
            end
            numDom = sum(domDefMat,"all");
            randIdxs = randperm(numDom,numCon);
            randIdxs = sort(randIdxs);
            [domRows,domCols] = find(domDefMat);
            randRows = domRows(randIdxs);
            randCols = domCols(randIdxs);
            randomizedMat = zeros(size(domDefMat));
            randomizedMat(sub2ind(size(randomizedMat),randRows,randCols)) = 1;
            randDomDefMat = domDefMat;
        end
            
        function [randomizedMat,randDomDefMat] = distancePreservedGeneration(conMat, domDefMat, distMat,options)
            arguments
                conMat (:,:) logical
                domDefMat (:,:) logical
                distMat (:,:) double
                options.BinWidth = 100;
            end
            conMat = conMat .* domDefMat;
            numCon = sum(conMat,"all");
            if isempty(numCon)
                randomizedMat = zeros(size(conMat));
                return;
            end
            binWidth = options.BinWidth;
            referenceDistributionBins = DistanceDistributionBins(distMat,conMat,binWidth);
            populationDistributionBins = DistanceDistributionBins(distMat,domDefMat,binWidth);
            randomizedMat = makeRandomIdenticalDistributionConnectionMatrix(referenceDistributionBins,populationDistributionBins);
            randDomDefMat = domDefMat;
        end


        function [randomizedMat,randDomDefMat] = networkPreserveGeneration(conMat, domDefMat, ~, options)
            arguments
               conMat (:,:) logical
               domDefMat (:,:) logical;
               ~
               options.SameRegionTag (1,1) logical = 1;
               options.MRCategoricalSrc = [];
               options.MRCategoricalTgt = [];
            end
            conMat = conMat .* domDefMat;
            numCon = sum(conMat,"all");
            if isempty(numCon)
                randomizedMat = zeros(size(conMat));
                return;
            end
            [rowSize,colSize] = size(conMat);
            if isempty(options.MRCategoricalSrc)
                rowRandIdxs = randperm(rowSize);
                colRandIdxs = randperm(colSize);
            else
                rowRandIdxs = shuffledIndexByCategory(options.MRCategoricalSrc);
                colRandIdxs = shuffledIndexByCategory(options.MRCategoricalTgt);
            end
            if options.SameRegionTag == 1
                colRandIdxs = rowRandIdxs;
            end
            randomizedMat = conMat;
            randomizedMat = randomizedMat(rowRandIdxs,:);
            randomizedMat = randomizedMat(:,colRandIdxs);
            randDomDefMat = domDefMat;
            randDomDefMat = randDomDefMat(rowRandIdxs,:);
            randDomDefMat = randDomDefMat(:,colRandIdxs);
        end

        function fh = randMethodName2handle(methodName)
            arguments
                methodName string
            end
            switch methodName
                case "RandomGeneration"
                    fh  = @ConnectomeRandomizationMethods.randomGeneration;
                case "DistancePreserve"
                    fh = @ConnectomeRandomizationMethods.distancePreservedGeneration;
                case "NetworkPreserve"
                    fh = @ConnectomeRandomizationMethods.networkPreserveGeneration;
                otherwise
                    error("methodName must be 'RandomGeneration','DistancePreserve', or 'NetworkPreserve'")
            end

    end
end
